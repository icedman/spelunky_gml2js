className = (obj) => {
  if (!obj.className) {
    var cc = obj.constructor.toString().split('\n')[0];
    obj.className = /(class|function) ([a-zA-Z0-9]*)/.exec(cc)[2];
  }
  return obj.className;
};

function null_function() {}

class ObjType {}

class oObject {
  constructor() {
    className(this);
    this.alarm = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];
    this.levelArray = [];
    this.levelList = [];
  }

  onCreate() {
    eval(`try { ${this.className}_CREATE } catch(err) { null_function } `)(
      this
    );
  }

  onStep() {
    eval(`try { ${this.className}_STEP } catch(err) { null_function } `)(this);
  }

  onDestroy() {
    eval(`try { ${this.className}_DESTROY } catch(err) { null_function } `)(
      this
    );
  }

  // declare variables
  ATTACK = 'ATTACK';
  BOUNCE = 'BOUNCE';
  DEAD = 'DEAD';
  DOWN = 'DOWN';
  DROP = 'DROP';
  DROWNED = 'DROWNED';
  DUCKING = 'DUCKING';
  EXIT = 'EXIT';
  HANG = 'HANG';
  IDLE = 'IDLE';
  JUMPING = 'JUMPING';
  LEFT = 'LEFT';
  PAUSE = 'PAUSE';
  RECOVER = 'RECOVER';
  RETURN = 'RETURN';
  RIGHT = 'RIGHT';
  RUN = 'RUN';
  STUNNED = 'STUNNED';
  THROW = 'THROW';
  THROWN = 'THROWN';
  TRANSITION = 'TRANSITION';
  TURN = 'TURN';
  UP = 'UP';
  WAIT = 'WAIT';
  WALK = 'WALK';
  YELL = 'YELL';
  GET_FILE_NAME = 'GET_FILE_NAME';
  acing;
  active;
  adeOut;
  alarm;
  alienbosses;
  aliens;
  allTimer;
  alling;
  armed;
  arrow;
  arrows;
  attackPressed;
  attackTimer;
  author;
  avor;
  baskets;
  bats;
  bet;
  bigemeralds;
  bigrubies;
  bigsapphires;
  blink;
  blinkToggle;
  bloodLeft;
  bloodless;
  bombID;
  bombStart;
  bombs;
  bounce;
  bounceCounter;
  bounceFactor;
  bounced;
  bowStrength;
  breakPieces;
  bubbleTimer;
  burnTimer;
  burning;
  buyMessage;
  c;
  c_black;
  c_red;
  c_white;
  c_yellow;
  canCollect;
  canPause;
  canPickUp;
  cavemen;
  cemetary;
  checkWater;
  cimg;
  cityOfGold;
  cleanDeath;
  cleanSolids;
  climbSndToggle;
  colBot;
  colLeft;
  colRight;
  colTop;
  collect;
  collectCounter;
  cost;
  counter;
  cr_default;
  cr_none;
  customLevel;
  customLevelName;
  damage;
  damsels;
  darkLevel;
  darkness;
  dead;
  deadfish;
  deathTimer;
  depth;
  destroy;
  diamonds;
  dir;
  direction;
  dist;
  donate;
  door;
  downHeld;
  drawHUD;
  drawStatus;
  dying;
  emeralds;
  enabled;
  enemy;
  enemyDeaths;
  enemyID;
  enemyKills;
  err;
  facing;
  fadeIn;
  fadeLevel;
  fadeOut;
  falling;
  favor;
  file;
  fired;
  firedMax;
  firing;
  firingMax;
  flame;
  flare;
  flying;
  focus;
  frictionFactor;
  gameStart;
  gamepad;
  gamepadOn;
  gem;
  genBlackMarket;
  ghostExists;
  giantspiders;
  gold;
  goldbar;
  goldbars;
  grabCounter;
  grav;
  hawkThrow;
  hawkmen;
  heavy;
  held;
  highscore;
  hit;
  holdItem;
  hp;
  id;
  idols;
  image_alpha;
  image_angle;
  image_blend;
  image_index;
  image_speed;
  image_xscale;
  image_yscale;
  inDiceHouse;
  inWeb;
  invincible;
  irefrogs;
  irstCustomLevel;
  irstTime;
  item;
  joyAttackVal;
  joyBombVal;
  joyFlareVal;
  joyItemVal;
  joyJumpVal;
  joyPayVal;
  joyRopeVal;
  joyRunVal;
  joyStartVal;
  joyid;
  kaliPunish;
  keepScore;
  keyAttackVal;
  keyItemVal;
  keyJumpVal;
  keyPayVal;
  keyRunVal;
  keyboard_key;
  kills;
  kissed;
  lake;
  levelArray;
  levelList;
  levelName;
  levelType;
  life;
  lifeStart;
  linkVal;
  magma;
  mantraps;
  mb_left;
  megamouths;
  message;
  message2;
  messageTimer;
  mini1;
  mini2;
  mini3;
  moaiX;
  moaiY;
  money;
  moneyCount;
  moneyDiff;
  monkeys;
  mouse_x;
  mouse_y;
  murderer;
  music;
  musicFade;
  musicVol;
  myFont;
  myFontSmall;
  myGrav;
  myGravNorm;
  newKills;
  newMoney;
  newSaves;
  newTime;
  nextLevel;
  nuggets;
  numLevels;
  numPages;
  obj;
  objChecked;
  olmecDead;
  on;
  open;
  origX;
  origY;
  other;
  owner;
  page;
  path;
  person;
  pickupItem;
  pickupItemType;
  piece;
  piranhas;
  player;
  plife;
  points;
  poof;
  poop;
  prevCustomLevel;
  prox;
  puncture;
  pushed;
  px;
  py;
  range;
  rogs;
  rolled;
  room;
  roomPath;
  room_height;
  room_width;
  rope;
  ropeStart;
  rubble;
  rubies;
  sacCount;
  safe;
  sapphires;
  scarabs;
  screenScale;
  scroll;
  scrollStart;
  scrolling;
  shake;
  shakeCounter;
  shakeToggle;
  shopDesc;
  shopThrow;
  shopWall;
  shopkeepers;
  sight;
  sightCounter;
  skeletons;
  skull;
  skulls;
  snakes;
  sndAlert;
  sndAlien;
  sndArrowTrap;
  sndBat;
  sndBigJump;
  sndBlink1;
  sndBlink2;
  sndBoing;
  sndBowPull;
  sndBreak;
  sndCavemanDie;
  sndChestOpen;
  sndClick;
  sndClimb1;
  sndClimb2;
  sndCoin;
  sndCrunch;
  sndDamsel;
  sndDie;
  sndExplosion;
  sndFlame;
  sndFrog;
  sndGem;
  sndGhost;
  sndGiantSpider;
  sndHit;
  sndHurt;
  sndIgnite;
  sndJump;
  sndKiss;
  sndLaser;
  sndMattockBreak;
  sndMonkey;
  sndPFall;
  sndPickup;
  sndPsychic;
  sndShotgun;
  sndSlam;
  sndSmallExplode;
  sndSplash;
  sndSteps;
  sndTFall;
  sndTeleport;
  sndThrow;
  sndThud;
  sndThump;
  sndTrap;
  sndWhip;
  sndYetiYell;
  sndZombie;
  spears;
  speed;
  spider;
  spiders;
  sprite_height;
  sprite_index;
  sprite_width;
  startPressed;
  state;
  status;
  sticky;
  stickyXDiff;
  stickyYDiff;
  str;
  str2;
  stuck;
  stunTime;
  stunTimer;
  stunned;
  style;
  swimming;
  tKills;
  tMoney;
  tSaves;
  tTime;
  talk;
  testLevel;
  thickness;
  thiefLevel;
  tile;
  time;
  timer;
  titleStart;
  tomblords;
  totalCrates;
  trap;
  trapID;
  treasure;
  trigger;
  tunnel1;
  tunnel1Max;
  tunnel2;
  tunnel2Max;
  tunnel3Max;
  type;
  udjatBlink;
  ufos;
  upHeld;
  value;
  vampires;
  view_enabled;
  view_hview;
  view_vborder;
  view_wview;
  view_xview;
  view_yview;
  vineCounter;
  viscidTop;
  visible;
  vk_backspace;
  vk_delete;
  vk_enter;
  vk_escape;
  wallHurt;
  whipped;
  whipping;
  x;
  xAcc;
  xAct;
  xDiff;
  xOff;
  xVel;
  xa;
  xdamsels;
  xmoney;
  xtime;
  xv;
  y;
  yAcc;
  yDelta;
  yOff;
  yVel;
  yVelLimit;
  ya;
  yetiThrow;
  yetikings;
  yetis;
  yv;
  zombies;
}
